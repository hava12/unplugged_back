plugins {
	id 'org.springframework.boot' version '2.3.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'com.moowork.node' version "1.3.1"
	id 'java'
}
group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

node {
	version = '12.13.0'
	npmVersion = '6.12.0'
	workDir = file("./vue")
	npmWorkDir = file("./vue")
	nodeModulesDir = file("./vue")
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3")
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
    runtimeOnly 'mysql:mysql-connector-java'
	compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
    compile 'io.jsonwebtoken:jjwt:0.9.0'
}

test {
	useJUnitPlatform()
}

jar {
	manifest {
		attributes 'Main-Class': 'com.magichour.MagicHourApplication'
	}
	from {
		configurations.compile.collect {
			it.isDirectory() ? it : zipTree(it)
		}
	}
}

task setUp(type: NpmTask) {
	description = "Install Node.js packages"
	args = ['install']
	inputs.files file('package.json')
	outputs.files file('node_modules')
}

task buildFrontEnd(type: NpmTask, dependsOn: setUp){
	description = "Build vue.js"
	args = ['run','build']
}

processResources.dependsOn 'buildFrontEnd'
